plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}


android {
    signingConfigs {
        release {
            storeFile rootProject.file(".certs/99minutos.jks")
            storePassword System.getenv("APPCENTER_KEYSTORE_PASSWORD") ? System.getenv("APPCENTER_KEYSTORE_PASSWORD") : localProperties['RELEASE_KEY_STORE_PASSWORD']
            keyAlias System.getenv("APPCENTER_KEY_ALIAS") ? System.getenv("APPCENTER_KEY_ALIAS") : localProperties['RELEASE_KEY_ALIAS']
            keyPassword System.getenv("APPCENTER_KEY_PASSWORD") ? System.getenv("APPCENTER_KEY_PASSWORD") : localProperties['RELEASE_KEY_PASSWORD']
        }
    }

    namespace 'com.example.testarquitecture2023'
    compileSdk 33

    defaultConfig {
        applicationId "com.github.juanncode.testarquitecture2023"
        minSdk 23
        targetSdk 33
        versionCode 3
        versionName "0.1.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
        quality {
            minifyEnabled true
            applicationIdSuffix ".quality"
            signingConfig signingConfigs.release

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation(project(":core:datastore"))
    implementation(project(":feature:movie:presentation"))
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.3.1'

    //dagger hilt
    implementation libs.dagger.hilt.android
    kapt libs.dagger.hilt.compiler

    implementation("androidx.compose.runtime:runtime-livedata:1.3.3")
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
}